{"version":3,"sources":["socket.js","navigation/topNav.js","chat/chatUsers.js","chat/message.js","chat/chatArea.js","chat/chatBox.js","chat/chat.js","chat/error.js","index.js"],"names":["SocketManager","getSocket","socket","this","SocketIOClient","instance","createInstance","getInstance","TopNavigation","render","id","React","Component","ChatUsers","componentDidMount","fetch","method","headers","then","res","a","status","json","generateUI","on","data","updateUser","setState","showError","catch","err","userUpdate","users","state","i","userID","username","colour","activeUsers","index","userData","JSON","parse","Cookies","get","split","temp","UI","row","push","Col","style","color","fontSize","length","key","Math","floor","Row","Message","props","message","timestamp","toString","ChatArea","generateMessageUI","addMessage","updateMessages","messages","messageUI","Date","toLocaleString","scrollToBottom","bottomRef","current","scrollIntoView","behaviour","ref","createRef","delay","ms","Promise","setTimeout","ChatBox","showFailure","buttonTitle","buttonDisabled","showCommandError","formRef","value","placeholder","sendMessage","body","stringify","sendCommand","parseCommands","text","command","name","Option","handleSubmission","trim","checkForEmojis","plain","emoji","indexOf","replace","Form","Group","Control","as","onChange","Button","onClick","disabled","Chat","Container","height","display","gridTemplateRows","zIndex","ErrorPage","retry","retryConnection","App","tryConnection","establishConnection","setupDone","Fragment","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eeba8b46.chunk.js","sourcesContent":["import SocketIOClient from 'socket.io-client';\n\nexport default class SocketManager {\n    static instance = null;\n    constructor() {\n        this.socket = SocketIOClient('http://csx3.cs.ucalgary.ca:3000/'); // CHANGE ME \n    }\n\n    getSocket = () => {\n        return this.socket;\n    }\n\n    static createInstance = () => {\n        if (this.instance === null) this.instance = new SocketManager();\n    }\n\n    static getInstance = () => {\n        if(this.instance === null) this.instance = new SocketManager();\n        else return this.instance;\n    }\n}","import React from 'react';\nimport '../styling/topNav.css';\n\nexport default class TopNavigation extends React.Component {\n    render = () => {\n        return (\n            <div id=\"top-nav\">\n                <div id=\"top-nav-title\">\n                    <b>Chat App</b>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport { Row, Col } from 'react-bootstrap';\nimport SocketManager from '../socket';\nimport '../styling/chatUsers.css';\n\nexport default class ChatUsers extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            users: [],\n            UI: [],\n            showError: false\n        }\n    }\n\n    componentDidMount = () => {\n        fetch('/api/state/', {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(async res => {\n                if (res.status === 200) {\n                    res = await res.json();\n                    this.generateUI(res);\n                    const socket = SocketManager.getInstance().getSocket();\n                    socket.on('active users', (data) => {\n                        this.generateUI(data); \n                    });\n                    socket.on('user update', (data) => {\n                        this.updateUser(data);\n                    });\n                }\n                else this.setState({ showError: true });\n            })\n            .catch(err => { this.setState({ showError: true }); });\n    }\n\n    updateUser = (userUpdate) => {\n        let users = [...this.state.users];\n        for(let i in users) {\n            if(users[i].userID === userUpdate.userID) {\n                users[i].username = userUpdate.username;\n                users[i].colour = userUpdate.colour;\n            }\n        }\n        this.generateUI(users);\n    }\n\n    generateUI = (activeUsers) => {\n        // Re-arrange active users so \"you\" are first\n        var index = 0;\n        for (let userData of activeUsers) {\n            if (JSON.parse(Cookies.get('userData').split('j:')[1]).userID === userData.userID) break;\n            index++;\n        }\n        const temp = activeUsers[0];\n        activeUsers[0] = activeUsers[index];\n        activeUsers[index] = temp;\n        // Create UI\n        var UI = [];\n        var row = [];\n        var i = 0;\n        for (const userData of activeUsers) {\n            row.push(\n                <Col key={i}>\n                    <div style={{ color: userData.colour, fontSize: '12px' }} key={i}>\n                        <b>{userData.username + ((JSON.parse(Cookies.get('userData').split('j:')[1]).userID === userData.userID) ? \" (You)\" : \"\")}</b>\n                    </div>\n                </Col>\n            );\n            if (row.length === 2) {\n                let key = Math.floor(i / 2);\n                UI.push(<Row key={key}>{row}</Row>);\n                row = [];\n            }\n            i++;\n        }\n        if (row.length !== 0) UI.push(<Row key={1}>{row}</Row>);\n        this.setState({ users: activeUsers, UI: UI, showError: false });\n    }\n\n    render = () => {\n        return (\n            <div id='chat-users'>\n                <div style={{ fontSize: '16px' }}><b>Active Users</b></div>\n                {!this.state.showError ? (this.state.UI.length > 0 ? this.state.UI : <div style={{ fontSize: '12px' }}>Loading...</div>) : <div style={{ fontSize: '12px' }}>Could not fetch active users. Try refreshing!</div>}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Cookies from 'js-cookie';\nimport '../styling/message.css';\n\nexport default class Message extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render = () => {\n        return (\n            <div id='message'>\n                <div style={{ color: this.props.colour, fontSize: '16px' }}>\n                    {(this.props.userID === JSON.parse(Cookies.get('userData').split('j:')[1]).userID) ? <b>{this.props.username}</b> : this.props.username}\n                </div>\n                <div style={{ fontSize: '16px' }}>\n                    {(this.props.userID === JSON.parse(Cookies.get('userData').split('j:')[1]).userID) ? <b>{this.props.message}</b> : this.props.message}\n                </div>\n                <div style={{ fontSize: '12px' }}>{this.props.timestamp.toString()}</div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Message from './message';\nimport SocketManager from '../socket';\nimport Cookies from 'js-cookie';\n\nimport '../styling/chatArea.css';\n\nexport default class ChatArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: [],\n            messageUI: [],\n            showError: false\n        }\n        this.bottomRef = React.createRef();\n    }\n\n    componentDidMount = () => {\n        fetch('/api/message/', {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json' }\n        })\n            .then(async res => {\n                if (res.status === 200) {\n                    res = await res.json();\n                    this.generateMessageUI(res);\n                    const socket = SocketManager.getInstance().getSocket();\n                    socket.on('new message', (message) => {\n                        this.addMessage(message);\n                    });\n                    socket.on('user update', (data) => {\n                        this.updateMessages(data);\n                    });\n                }\n                else this.setState({ showError: true });\n            })\n            .catch(err => { this.setState({ showError: true }); });\n    }\n\n    generateMessageUI = async (messages) => {\n        let messageUI = [];\n        var i = 0;\n        for (let message of messages) {\n            await fetch('/api/user/' + message.userID, {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' }\n            })\n                .then(async res => {\n                    if (res.status === 200) {\n                        res = await res.json();\n                        message.username = res.username;\n                        message.colour = res.colour;\n                        let timestamp = new Date(message.timestamp);\n                        messageUI.push(\n                            <Message\n                                key={i}\n                                message={message.message}\n                                timestamp={timestamp.toLocaleString()}\n                                username={res.username}\n                                userID={message.userID}\n                                colour={res.colour}\n                            />\n                        );\n                        i++;\n                    }\n                    else this.setState({ showError: true });\n                })\n                .catch(err => { this.setState({ showError: true }); });\n        }\n        this.setState({ messages: messages, messageUI: messageUI });\n        this.scrollToBottom();\n    }\n\n    addMessage = (message) => {\n        let messages = [...this.state.messages];\n        messages.push(message);\n        let messageUI = [this.state.messageUI];\n        let timestamp = new Date(message.timestamp);\n        messageUI.push(\n            <Message\n                key={messageUI.length}\n                message={message.message}\n                timestamp={timestamp.toLocaleString()}\n                username={message.username}\n                userID={message.userID}\n                colour={message.colour}\n            />\n        );\n        this.setState({ messages: messages, messageUI: messageUI });\n        this.scrollToBottom();\n    }\n\n    updateMessages = (userUpdate) => {\n        let messages = [...this.state.messages];\n        let messageUI = [...this.state.messageUI];\n        for (let i in messages) {\n            if (messages[i].userID === userUpdate.userID) {\n                messages[i].username = userUpdate.username;\n                messages[i].colour = userUpdate.colour;\n                let timestamp = new Date(messages[i].timestamp);\n                messageUI[i] = (\n                    <Message\n                        key={i}\n                        message={messages[i].message}\n                        timestamp={timestamp.toLocaleString()}\n                        username={userUpdate.username}\n                        userID={userUpdate.userID}\n                        colour={userUpdate.colour}\n                    />\n                );\n            }\n        }\n        this.setState({ messages: messages, messageUI: messageUI });\n    }\n\n    scrollToBottom = () => {\n        if (this.bottomRef.current === null) return;\n        this.bottomRef.current.scrollIntoView({ behaviour: 'smooth' });\n    }\n\n    render = () => {\n        return (\n            <div id='chat-area'>\n                <div id='message-area'>\n                    {this.state.messageUI}\n                    <div id='bottom-ref' ref={this.bottomRef}></div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Cookies from 'js-cookie';\nimport { Form, Button } from 'react-bootstrap';\nimport '../styling/chatBox.css';\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nexport default class ChatBox extends React.Component {\n    constructor() {\n        super();\n        this.formRef = React.createRef();\n        this.state = {\n            buttonTitle: 'Send',\n            buttonDisabled: false,\n            placeholder: 'Type here... Commands: \"/name x\" or \"/color RRGGBB\"; Emojis: :) , :( , :o\"'\n        }\n    }\n\n    showFailure = async () => {\n        this.setState({ buttonTitle: 'Failed...', buttonDisabled: true });\n        await delay(1000);\n        this.setState({ buttonTitle: 'Send', buttonDisabled: false });\n    }\n\n    showCommandError = async (message) => {\n        this.formRef.current.value = '';\n        this.setState({ placeholder: message });\n        await delay(2000);\n        this.setState({ placeholder: 'Type here... Commands: \"/name x\" or \"/color RRGGBB\"; Emojis: :) , :( , :o\"' });\n    }\n\n    sendMessage = async (message) => {\n        await this.setState({ buttonTitle: 'Sending...' });\n        await fetch('/api/message/', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ message: message })\n        })\n            .then(async res => {\n                if (res.status === 200) {\n                    this.formRef.current.value = '';\n                    this.setState({ buttonTitle: 'Send' });\n                } else this.showFailure();\n            })\n            .catch(() => {\n                this.showFailure();\n            });\n    }\n\n    sendCommand = (username, color) => {\n        fetch('/api/user/', {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                username: username,\n                colour: color\n            })\n        })\n            .then(res => {\n                if (res.status === 200) this.formRef.current.value = '';\n                else this.showCommandError(\"Command failed, please try again...\");\n            })\n            .catch(err => { this.showCommandError(\"Command failed, please try again...\"); });\n    }\n\n    parseCommands = (text) => {\n        if (text[0] !== '/' || text.split(\" \").length !== 2) {\n            if (text[0] !== '/') this.sendMessage(text);\n            else this.showCommandError(\"Command failed, please try again...\");\n            return;\n        }\n        const command = text.split(\" \")[0];\n        if (command === '/name') {\n            const name = text.split(\" \")[1];\n            if(name.length < 6) {\n                this.showCommandError(\"Name must be at least 6 characters...\");\n                return;\n            }\n            this.sendCommand(name, JSON.parse(Cookies.get('userData').split('j:')[1]).colour);\n        } else if (command === '/color') {\n            const color = '#' + text.split(\" \")[1];\n            let style = new Option().style;\n            style.color = color;\n            if (style.color === '' || color === \"#FFFFFF\" || color.length < 7) {\n                this.showCommandError(\"Invalid color...\");\n                return;\n            }\n            this.sendCommand(JSON.parse(Cookies.get('userData').split('j:')[1]).username, color);\n        }\n        else this.sendMessage(text);\n    }\n\n    handleSubmission = () => {\n        if (this.formRef.current.value === '') return;\n        else this.parseCommands(this.formRef.current.value.trim());\n    }\n\n    checkForEmojis = () => {\n        let text = this.formRef.current.value;\n        const plain = [\":)\", \":(\", \":o\"];\n        const emoji = [\"😁\", \"🙁\", \"😲\"];\n        for(var i = 0; i < plain.length; i++) {\n            var index = text.indexOf(plain[i]);\n            if (index >= 0) this.formRef.current.value = text.replace(plain[i], emoji[i]);\n        }\n    }\n\n    render = () => { // Align to bottom\n        return (\n            <div id='chat-box'>\n                <Form.Group>\n                    <Form.Control\n                        ref={this.formRef}\n                        as=\"textarea\"\n                        placeholder={this.state.placeholder}\n                        onChange={this.checkForEmojis}\n                    />\n                </Form.Group>\n                <Button onClick={this.handleSubmission} disabled={this.state.buttonDisabled}><div><b>{this.state.buttonTitle}</b></div></Button>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ChatUsers from './chatUsers';\nimport ChatArea from './chatArea';\nimport ChatBox from './chatBox';\nimport { Container, Row as div } from 'react-bootstrap';\nimport '../styling/chat.css';\n\nexport default class Chat extends React.Component {\n    constructor() {\n        super();\n    }\n\n    render = () => {\n        return (\n            <div id='chat'>\n                <Container style={{ height: 'calc(100vh - 54px)' }}>\n                    <div id='chat' style={{display: 'grid', gridTemplateRows: '80% 20%'}}>\n                        <div><ChatUsers /><ChatArea /></div>\n                        <div style={{zIndex: '10000'}}><ChatBox /></div> \n                    </div>\n                </Container>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport '../styling/error.css';\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nexport default class ErrorPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttonTitle: 'Retry'\n        }\n    }\n\n    retry = async () => {\n        this.props.retryConnection();\n        this.setState({ buttonTitle: 'Retrying...' });\n        await delay(1000);\n        this.setState({ buttonTitle: 'Retry' });\n    }\n\n    render = () => {\n        return (\n            <div id='error'>\n                <b>Oops! Something went wrong.</b>\n                <Button id='retry-button' onClick={this.retry}>\n                    <div><b>{this.state.buttonTitle}</b></div>\n                </Button>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Cookies from 'js-cookie';\nimport SocketManager from './socket';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport TopNavigation from './navigation/topNav';\nimport Chat from './chat/chat';\nimport ErrorPage from './chat/error';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tshowError: false,\n\t\t\tsetupDone: false\n\t\t}\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.tryConnection();\n\t}\n\n\ttryConnection = () => {\n\t\t// Don't allow more than 6 users\n\t\tif (!Cookies.get('userData')) {\n\t\t\tfetch('/api/user/', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: { 'Content-Type': 'application/json' }\n\t\t\t})\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === 200) this.establishConnection();\n\t\t\t\t\telse this.showError();\n\t\t\t\t})\n\t\t\t\t.catch(err => { this.showError(); })\n\t\t}\n\t\telse this.establishConnection();\n\t}\n\n\testablishConnection = () => {\n\t\tSocketManager.createInstance();\n\t\tthis.setState({ showError: false, setupDone: true });\n\t}\n\n\tshowError = () => {\n\t\tthis.setState({ showError: true });\n\t}\n\n\trender = () => {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id='content'>\n\t\t\t\t\t<TopNavigation />\n\t\t\t\t\t{this.state.setupDone ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t!this.state.showError ?\n\t\t\t\t\t\t\t\t<div id='chat-space'>\n\t\t\t\t\t\t\t\t\t<Chat />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<div id='chat-space'>\n\t\t\t\t\t\t\t\t\t<ErrorPage retryConnection={this.tryConnection} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div id='chat-space'>\n\t\t\t\t\t\t\t<div id='error'>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}